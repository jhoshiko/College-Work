#BlueJ class context
comment0.target=MyCollectionInterface
comment0.text=\r\n\ An\ interface\ that\ describes\ all\ the\ operations\ to\ be\ implemented\ in\ a\ \r\n\ collection\ class.\ It\ uses\ generic\ object\ (T)\ and\ can\ be\ used\ to\ implement\ a\ \r\n\ collection\ class\ to\ store\ generic\ objects.\r\n\ @author\ Dr.\ Salim\ Lakhani\r\n\ @version\ 1.1,\ 2017,\ February\ 7\r\n
comment1.params=newItem
comment1.target=boolean\ add(java.lang.Object)
comment1.text=\r\n\ Adds\ a\ new\ entry\ to\ this\ collection\r\n\ \r\n\ @param\ newItem\ The\ object\ to\ be\ added\ to\ the\ collection\r\n\ @return\ True\ if\ the\ addition\ is\ successful,\ or\ false\ if\ not.\r\n
comment2.params=
comment2.target=java.lang.Object\ remove()
comment2.text=\r\n\ Removes\ one\ unspecified\ entry\ from\ the\ collection,\ if\ possible.\r\n\r\n\ @return\ Either\ the\ removed\ entry,\ if\ the\ removal\ was\ successful,\ or\ null.\r\n
comment3.params=anEntry
comment3.target=boolean\ remove(java.lang.Object)
comment3.text=\r\n\ Removes\ one\ occurrence\ of\ a\ given\ entry\ from\ this\ collection.\r\n\r\n\ @param\ anEntry\ The\ entry\ to\ be\ removed.\r\n\ @return\ true\ if\ the\ removal\ was\ successful,\ false\ if\ not.\r\n
comment4.params=
comment4.target=void\ clear()
comment4.text=\r\n\ Removes\ all\ entries\ from\ this\ collection.\r\n
comment5.params=
comment5.target=int\ getCurrentSize()
comment5.text=\r\n\ Gets\ the\ current\ number\ of\ entries\ in\ this\ collection.\r\n\r\n\ @return\ The\ integer\ number\ of\ entries\ currently\ in\ the\ collection.\r\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\r\n\ Check\ to\ see\ if\ the\ collection\ is\ empty.\r\n\r\n\ @return\ True\ if\ the\ collection\ is\ empty,\ or\ false\ if\ not.\r\n
comment7.params=anEntry
comment7.target=int\ getFrequencyOf(java.lang.Object)
comment7.text=\r\n\ Counts\ the\ number\ of\ times\ a\ given\ entry\ appears\ in\ this\ collection.\r\n\r\n\ @param\ anEntry\ The\ entry\ to\ be\ counted.\r\n\ @return\ The\ number\ of\ times\ anEntry\ appears\ in\ the\ collection.\r\n
comment8.params=anEntry
comment8.target=boolean\ contains(java.lang.Object)
comment8.text=\r\n\ Tests\ whether\ this\ collection\ contains\ a\ given\ entry.\r\n\r\n\ @param\ anEntry\ The\ entry\ to\ locate.\r\n\ @return\ True\ if\ the\ collection\ contains\ anEntry,\ or\ false\ if\ not.\r\n
comment9.params=
comment9.target=java.lang.Object[]\ toArray()
comment9.text=\r\n\ Retrieves\ all\ entries\ that\ are\ in\ this\ collection.\r\n\r\n\ @return\ A\ newly\ allocated\ array\ of\ all\ the\ entries\ in\ the\ collection.\ \r\n\ Note\:\ If\ the\ collection\ is\ empty,\ the\ returned\ array\ is\ empty.\r\n
numComments=10
